{
    "skills": "[\n  {\n    \"question\": \"You're tasked with optimizing a slow-performing API endpoint built with Node.js and Express.js that retrieves data from a MySQL database. Describe your process for identifying the bottleneck, including the tools you'd use, and outline potential solutions at both the application and database levels. Consider factors like query optimization, caching strategies, and connection pooling.\",\n    \"skill_area\": \"Node.js, Express.js, MySQL, Performance Optimization\"\n  },\n  {\n    \"question\": \"A critical feature in your React application requires real-time updates. You are considering using either WebSockets via a custom Node.js server or leveraging AWS AppSync. Compare and contrast these two approaches, highlighting the trade-offs in terms of development effort, scalability, cost, and maintenance. Which would you choose, and why?\",\n    \"skill_area\": \"React, Node.js, Amazon Web Services, Real-time Communication\"\n  },\n  {\n    \"question\": \"You need to create a CI/CD pipeline for a full-stack application (React frontend, Node.js/Express.js backend) hosted on AWS. The application uses DynamoDB for data storage. Detail the steps involved in setting up this pipeline using Github Actions, Docker, and AWS services like CodePipeline and ECR. Include considerations for automated testing, environment variables, and deployment strategies (e.g., blue/green deployment).\",\n    \"skill_area\": \"React, Node.js, Express.js, Amazon Web Services, Docker, Github Actions, DynamoDB, CI/CD\"\n  },\n  {\n    \"question\": \"Explain the differences between SQL and NoSQL databases. Describe a scenario where you would choose MongoDB over MySQL, and vice versa. Justify your choices based on factors like data structure, scalability requirements, and query patterns.\",\n    \"skill_area\": \"SQL, MongoDB, MySQL, Database Design\"\n  },\n  {\n    \"question\": \"You're working on a C++ project that requires integration with a REST API. Describe the steps you would take to consume the API, handle potential errors (e.g., network issues, invalid responses), and parse the JSON data returned by the API. What C++ libraries or techniques would you use, and why?\",\n    \"skill_area\": \"C++, REST API, JSON Parsing, Error Handling\"\n  }\n]"
}